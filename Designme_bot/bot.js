const fs = require('fs');
const TelegramBot = require('node-telegram-bot-api');

const token = '8175431453:AAHby4tr2bt9w0hpTQNOgi10--HrdKfDiIg'; // –£–∫–∞–∂–∏—Ç–µ –≤–∞—à —Ç–æ–∫–µ–Ω
const bot = new TelegramBot(token, { polling: true });

const usersFile = 'users.json';
let users = [];

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Ñ–∞–π–ª–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
if (fs.existsSync(usersFile)) {
  users = JSON.parse(fs.readFileSync(usersFile, 'utf-8'));
}

// ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
const adminId = 1767797528; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à Telegram ID

// Username –≤–∞—à–µ–≥–æ Telegram-–∫–∞–Ω–∞–ª–∞
const channelUsername = 'designme_news'; // –£–∫–∞–∂–∏—Ç–µ username –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞

// –•–µ—à—Ç–µ–≥, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –∏—Å–∫–∞—Ç—å –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
const hashtag = '#–¥–∏–∑–∞–π–Ω_–∫–≤–µ—Å—Ç';

// –ö–ª–∞–≤–∏—à–∏
const mainKeyboard = {
  reply_markup: {
    keyboard: [
      ['ü•á –ë–∞–ª–ª—ã', 'üèÜ –†–µ–π—Ç–∏–Ω–≥', 'üìú –ü—Ä–∞–≤–∏–ª–∞'], 
    ],
    resize_keyboard: true,
    one_time_keyboard: false,
  },
};

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª
async function isUserSubscribed(userId) {
  try {
    const member = await bot.getChatMember(`@${channelUsername}`, userId);
    return ['member', 'administrator', 'creator'].includes(member.status);
  } catch (error) {
    console.error(error);
    return false;
  }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start/, async (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  const username = msg.from.username || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π';

  const subscribed = await isUserSubscribed(userId);

  if (!subscribed) {
    bot.sendMessage(chatId, '–ß—Ç–æ–±—ã –≤—Å—Ç—É–ø–∏—Ç—å –≤ —Ä—è–¥—ã –≤–µ–±-–¥–∏–∑–∞–π–Ω–µ—Ä–æ–≤, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª: https://t.me/' + channelUsername);
    return;
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ
  const userExists = users.some((user) => user.id === userId);

  if (!userExists) {
    users.push({ id: userId, username: username, rating: 0, status: '–ù–∞—á–∏–Ω–∞—é—â–∏–π' });
    fs.writeFileSync(usersFile, JSON.stringify(users, null, 2), 'utf-8');
    bot.sendMessage(chatId, `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${username}! –í—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å–ø–∏—Å–æ–∫ –≤–µ–±-–¥–∏–∑–∞–π–Ω–µ—Ä–æ–≤!`, mainKeyboard);
  } else {
    bot.sendMessage(chatId, `–ü—Ä–∏–≤–µ—Ç! –î–∞–≤–Ω–æ –Ω–µ –≤–∏–¥–µ–ª–∏—Å—å, ${username}!`, mainKeyboard);
  }  

  const socialMediaKeyboard = {
    reply_markup: {
      inline_keyboard: [
        [
          { text: 'üì∏ Instagram', url: 'https://www.instagram.com/maximilian_designer' },
          { text: '‚úàÔ∏è Telegram', url: 'https://t.me/maximilian_courses' },
          { text: 'üíº LinkedIn', url: 'https://www.linkedin.com/in/amaximilian/' },
          { text: 'üé¨ Youtube', url: 'https://www.youtube.com/channel/UCoBXmvFbRWaACxy0RJQsjMA' },
        ],
      ],
    },
  };

  await bot.sendMessage(chatId, '–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à–∏ –Ω–æ–≤–æ—Å—Ç–∏:', socialMediaKeyboard);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –∫–∞–Ω–∞–ª–∞
bot.on('channel_post', async (msg) => {
  console.log('–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∫–∞–Ω–∞–ª–∞:', msg);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω—É–∂–Ω—ã–π —Ö–µ—à—Ç–µ–≥
  if (msg.text && msg.text.includes(hashtag)) {
    // –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    users.forEach(user => {
      bot.forwardMessage(user.id, msg.chat.id, msg.message_id)
        .then(() => {
          console.log(`–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${user.username}`);
        })
        .catch(err => {
          console.error('–û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', err);
        });
    });
  }
});

// –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ú–æ–∏ –±–∞–ª–ª—ã
bot.onText(/ü•á –ë–∞–ª–ª—ã/, (msg) => {
  const chatId = msg.chat.id;
  const user = users.find((user) => user.id === msg.from.id);

  if (!user) {
    bot.sendMessage(chatId, '–í—ã –µ—â—ë –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /start.');
    return;
  }

  // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É
  const sortedUsers = [...users].sort((a, b) => b.rating - a.rating);
  const position = sortedUsers.findIndex((u) => u.id === msg.from.id) + 1;

  const responseText = `ü•á –í–∞—à–µ –º–µ—Å—Ç–æ –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ: ‚Ññ*${position}*\n‚≠ê –í–∞—à–∏ –±–∞–ª–ª—ã: *${user.rating}*\nüéñÔ∏è –°—Ç–∞—Ç—É—Å: *${user.status}*`;

  bot.sendMessage(chatId, responseText, { parse_mode: 'MarkdownV2' });
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–†–µ–π—Ç–∏–Ω–≥"
bot.onText(/üèÜ –†–µ–π—Ç–∏–Ω–≥/, (msg) => {
    const chatId = msg.chat.id;
    const currentUserId = msg.from.id;
  
    if (!users.length) {
      bot.sendMessage(chatId, '–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç.');
      return;
    }
  
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É (–æ—Ç –±–æ–ª—å—à–µ–≥–æ –∫ –º–µ–Ω—å—à–µ–º—É)
    const sortedUsers = [...users].sort((a, b) => b.rating - a.rating);
  
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫
    let topList = '';
    sortedUsers.forEach((user, index) => {
      const isCurrentUser = user.id === currentUserId;
      const userLine = `${index + 1}. ${isCurrentUser ? '‚≠ê' : ''}${user.username || '–ë–µ–∑ –∏–º–µ–Ω–∏'} ‚Äî ${user.rating}${isCurrentUser ? '‚≠ê' : ''}`;
      topList += `${userLine}\n`;
    });
  
    bot.sendMessage(chatId, `üèÜ –†–µ–π—Ç–∏–Ω–≥ –≤–µ–±-–¥–∏–∑–∞–π–Ω–µ—Ä–æ–≤:\n\n${topList}`);

  });
  

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ò–Ω—Ñ–æ"
bot.onText(/üìú –ü—Ä–∞–≤–∏–ª–∞/, (msg) => {
  const chatId = msg.chat.id;

  const infoText = `–ö–≤–µ—Å—Ç-–ë–æ—Ç –¥–ª—è –≤–µ–±-–¥–∏–∑–∞–π–Ω–µ—Ä–æ–≤:
1. –ö–Ω–æ–ø–∫–∞ *ü•á –ë–∞–ª–ª—ã* ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–∞—à —Ç–µ–∫—É—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥.
2. –ö–Ω–æ–ø–∫–∞ *üèÜ –†–µ–π—Ç–∏–Ω–≥* ‚Äî –≤—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∏—Ö —Ä–µ–π—Ç–∏–Ω–≥–∞–º–∏.
3. –£—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ –∑–∞–¥–∞–Ω–∏—è—Ö –≤ –Ω–∞—à–µ–º Telegram-–∫–∞–Ω–∞–ª–µ, —á—Ç–æ–±—ã –ø–æ–≤—ã—à–∞—Ç—å —Å–≤–æ–π —Ä–µ–π—Ç–∏–Ω–≥.

‚ùóÔ∏è–ü—Ä–∞–≤–∏–ª–∞
1. –ü–æ—Å—Ç–∞–≤–∏—Ç—å –ª–∞–π–∫ –ø–æ—Å—Ç—É –≤ –≤–∏–¥–µ "üíú", –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –ø—Ä–æ–µ–∫—Ç–µ
2. –°–æ–∑–¥–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–∞—è –≥—Ä—É–ø–ø–∞ –¢–ì, –µ—Å–ª–∏ –∑–∞–∫–∞–∑ –Ω–µ –ø—Ä–æ—Å—Ç–æ–π –∏–ª–∏ –¥–æ–±–∞–≤–ª—è—é –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –≥—Ä—É–ø–ø—É
3. –ë—ã—Ç—å –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–º –∏ —Å–æ–±–ª—é–¥–µ–Ω–∏–µ –¥–µ–¥–ª–∞–π–Ω–æ–≤, –Ω—É–∂–Ω–æ –¥–æ–≤–æ–¥–∏—Ç—å –∑–∞–¥–∞—á—É –¥–æ –∫–æ–Ω—Ü–∞
5. –ü–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è –±–∞–ª–ª—ã
6. –ë–∞–ª–ª—ã –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è —Å–≤–æ–∏—Ö –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ –∏ —Å–æ—Å—Ç—è–∑–∞—Ç—å—Å—è –∑–∞ –ø–µ—Ä–≤–æ–µ –º–µ—Å—Ç–æ –≤ –†–µ–π—Ç–∏–Ω–≥–µ

–¶–µ–Ω–Ω–æ—Å—Ç—å –±–∞–ª–ª–æ–≤:
‚≠êÔ∏èx5 - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
‚≠êÔ∏èx10 - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
‚≠êÔ∏èx20 - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
‚≠êÔ∏èx50 - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ

–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã/–Ω–∞—à–ª–∏ –±–∞–≥ –∏–ª–∏ —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å —Ä–µ–∫–ª–∞–º—É, –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º: [@maximilian_courses](https://t.me/maximilian_courses)`;

  bot.sendMessage(chatId, infoText, { parse_mode: 'Markdown' });
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–µ–π—Ç–∏–Ω–≥–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞)
bot.onText(/\/setrating (\d+) (\d+)/, (msg, match) => {
  const chatId = msg.chat.id;

  if (msg.from.id !== adminId) {
    bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.');
    return;
  }

  const userId = parseInt(match[1]); // ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const newRating = parseInt(match[2]); // –ù–æ–≤—ã–π —Ä–µ–π—Ç–∏–Ω–≥

  const userIndex = users.findIndex((user) => user.id === userId);

  if (userIndex === -1) {
    bot.sendMessage(chatId, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.');
  } else {
    users[userIndex].rating = newRating;
    fs.writeFileSync(usersFile, JSON.stringify(users, null, 2), 'utf-8');
    bot.sendMessage(chatId, `–†–µ–π—Ç–∏–Ω–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${users[userIndex].username} –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ ${newRating}.`);
  }
});

//–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
bot.onText(/\/setstatus (\d+) (.+)/, (msg, match) => {
  const chatId = msg.chat.id;

  if (msg.from.id !== adminId) {
    bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.');
    return;
  }

  const userId = parseInt(match[1]); // ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const newStatus = match[2]; // –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å

  const userIndex = users.findIndex((user) => user.id === userId);

  if (userIndex === -1) {
    bot.sendMessage(chatId, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.');
  } else {
    users[userIndex].status = newStatus;
    fs.writeFileSync(usersFile, JSON.stringify(users, null, 2), 'utf-8');
    bot.sendMessage(chatId, `–°—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${users[userIndex].username} –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ "${newStatus}".`);
  }
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∏—Ö ID
bot.onText(/\/listusers/, (msg) => {
  if (msg.from.id !== adminId) {
    bot.sendMessage(msg.chat.id, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.');
    return;
  }

  const userList = users
    .map((user, index) => `${index + 1}. ${user.username || '–ë–µ–∑ –∏–º–µ–Ω–∏'} (ID: ${user.id}, –†–µ–π—Ç–∏–Ω–≥: ${user.rating})`)
    .join('\n');

  bot.sendMessage(msg.chat.id, userList || '–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç.');
});

console.log('–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!');